# Реализовать программу работы с органическими клетками, состоящими из ячеек.
#
# Формат вывода результата:
#     1. Создать не менее пяти-семи экземпляров.
#     2. Выполнить все арифмитические операторы.
#     3. Результаты показать с помощью make_order
#
# Техническое задание:
#     1. Создать класс «Клетка».
#     В его конструкторе инициализировать параметр, соответствующий количеству ячеек клетки (целое число).
#     2. Перегрузить арифметические операторы:
#     сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__floordiv__).
#     Вспомнить/посмотреть какие аргументы у операторов и что они возвращают.
#     3. Эти методы должны применяться только к клеткам
#     и выполнять увеличение, уменьшение, умножение, округление (до целого числа) и деление клеток, соответственно.
#     Сложение. Число ячеек общей клетки равняться сумме ячеек исходных двух клеток.
#     Вычитание. Число ячеек общей клетки равняться разности кол-ва ячеек исходных двух клеток.
#     Операцию необходимо выполнять, только если разность количества ячеек двух клеток больше нуля,
#     иначе выводить соответствующее сообщение.
#     Если здесь использовать исключение - посмотрите какой тип исключения подойдет лучше всего.
#     Умножение. Число ячеек общей клетки равняться произведению кол-ва ячеек исходных двух клеток.
#     Деление. Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
#     4. Реализовать метод make_order(), принимающий количество ячеек в ряду.
#     Этот метод позволяет организовать ячейки по рядам.
#     Метод должен возвращать строку вида *****\n*****\n*****&...,
#     где количество ячеек между \n равно переданному аргументу.
#     Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
#     Возвращаемое значение предназначено для последующей передачи в функцию print.
#     Например, количество ячеек клетки равняется 12, а количество ячеек в ряду — 5.
#     В этом случае метод make_order() вернёт строку: *****\n*****\n**.
#     Или, количество ячеек клетки — 15, а количество ячеек в ряду равняется 5.
#     Тогда метод make_order() вернёт строку: *****\n*****\n*****.


class Cell:
    def __init__(self, quantity: int):
        self.quantity = quantity

    def __add__(self, other):
        return Cell(self.quantity + other.quantity)

    def __sub__(self, other):
        if self.quantity > other.quantity:
            return Cell(self.quantity - other.quantity)
        else:
            return 'Вычитание невозможно\n'

    def __floordiv__(self, other):
        if self.quantity > 0 and other.quantity > 0:
            return Cell(round(self.quantity / other.quantity))
        else:
            return f"Деление на ноль\n"

    def __mul__(self, other):
        return Cell(self.quantity * other.quantity)

    def make_order(self, row):
        if self.quantity > 0:
            result = ''
            for _ in range(self.quantity // row):
                result += '*' * row + '\n'
                result += '*' * (self.quantity % row)
            return result + '\n'
        else:
            return 'Пусто. Совсем пусто.'

    def __str__(self):
        return f"Клетка состоит из {self.quantity} ячеек\n"


if __name__ == '__main__':
    cell_1 = Cell(100)
    cell_2 = Cell(12)
    cell_3 = Cell(33)
    cell_4 = Cell(0)
    print(cell_1+cell_2)
    print(cell_1-cell_2)
    print(cell_1/cell_4)
    print(cell_1*cell_2)
    print(cell_1.make_order(20))
    print(cell_2.make_order(10))
    print(cell_3.make_order(8))
    print(cell_4.make_order(5))
