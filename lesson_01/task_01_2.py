# 2. Для кубов нечётных чисел от 1 до 1000. Вычислить сумму чисел, # сумма цифр кубов которых делится нацело на 7.
#
# При решении задачи использовать только арифмитическое операции и циклы.
# Не используем списки, функцию range, преобразование в строку/список.

# Формат вывода результата:
# Вывод на экран формить в виде:
#   xxxxxxx ^3: xxx; sum: xxx [сумма цифр]
# Например:
#   19 ^3: 6859 sum: 19 [ 28 ]
#   31 ^3: 29791 sum: 50 [ 28 ]
#   43 ^3: 79507 sum: 93 [ 28 ]
# Примеры:
#   число 19, 19 ^ 3 = 6859, сумма чисел 6 + 8 + 5 + 9 = 28 – делится нацело на 7. Поэтому 19 включаем в вывод.
#
# Алгоритм:
#   Алгоритм должен корректно работать и для интервала от 1 до 1000, но для любого числа(заведенного в код),
#   например от 1 до 10000000. Сумма считается для самих чисел 19, 31, 43 и т.п. Не для кубов.
#   Первый шаг - получить разряды числа(цифры), т.е. из 6859 получить отдельные цифры 6,8,5,9.
#   Это делается за счет целочисленного деления на 10 и взятие остатка от этого деления.
#   Не используйте операции со строками. Поэкспериментируйте. Вы не знаете заранее насколько большим(длинным)
#   будет это число. Используйте цикл. Подумайте по какому условию вы из него выйдете.
#   Отладьте этот алгоритм и подсчитайте сумму цифр. Для куба произвольного числа.
#   Сделайте алгоритм предыдущего пунка частью цикла по числам от 1 до 1000 (нечетным).
#   Подумайте как лаконично реализовать проход только по нечетным числам.


# Задаем диапазон нечётных чисел для возведения в куб
start_num = 1
finish_num = 1000

numbers_sum = 0
while start_num <= finish_num:
    # Отбрасываем чётные числа
    if start_num % 2 != 0:
        # Возводим число в куб
        cube = start_num**3
        # Для суммы разрядов числа
        total = 0
        # Для целочисленного деления
        x = 1
        while cube // x > 0:
            # Получение разрядов чисел
            n = (cube // x) % 10
            # Изменение целочисленного делителя
            x = x * 10
            # Сумма разрядов чисел
            total += n
        # Выборка делимых на 7 сумм разрядов чисел
        if total % 7 == 0:
            # Суммирование основания
            numbers_sum += start_num
            print(start_num, '^3:', cube, 'sum:', numbers_sum, '[', total, ']')
        # Для перехода к следующему нечётному числу
        start_num += 2
